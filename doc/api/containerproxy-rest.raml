#%RAML 1.0
---
title: ContainerProxy
baseUri: https://localhost:8080/api
mediaType: application/json

types:

  proxy:
    properties:
      id: string
      spec: proxySpec
      startupTimestamp: integer
      status: string
      userId: string
      containers: container[]
      targets: map
    example:
      id: 123-456-789
      spec: ...
      startupTimestamp: 234342394
      status: Up
      userId: myUserName
      containers: ...
      targets:
        "/endpoint/123": "http://localhost:20000"

  container:
    properties:
      id: string
      spec: containerSpec
      parameters: map

  proxySpec:
    properties:
      accessControl: accessControl
      containerSpecs: containerSpec[]
      id: string
      description:
        type: string
        required: false
      displayName:
        type: string
        required: false
      logoURL:
        type: string
        required: false
      settings:
        type: map
        required: false
      runtimeSettingSpecs:
        type: runtimeSettingSpec[]
        required: false
    example:
        id: 01_hello
        display-name: Hello Application
        description: Application which demonstrates the basics of a Shiny app
        containerSpecs: ...

  containerSpec:
    properties:
      cmd: string[]
      image: string
      portMapping: map
      dns:
        type: string[]
        required: false
      env:
        type: map
        required: false
      envFile:
        type: string
        required: false
      memory:
        type: string
        required: false
      network:
        type: string
        required: false
      networkConnections:
        type: string[]
        required: false
      privileged:
        type: boolean
        required: false
      settings:
        type: map
        required: false
      volumes:
        type: string[]
        required: false
    example:
      cmd: ["R", "-e", "shinyproxy::run_01_hello()"]
      image: openanalytics/shinyproxy-demo
      memory: 4g
      network: my-docker-network
      portMapping:
        default: 3838

  runtimeSettingSpec:
    properties:
      name: string
      type: string
      config:
        type: map
        required: false
    example:
      name: containerCPU
      type: int
      config:
        enum: [ 2, 4, 8 ]

  accessControl:
    properties:
      groups: string[]
    example:
      groups: [ group1, group2, group3 ]

  map:
    properties:
      //: any

/proxy:
  get:
    description: Get a list of all active proxies that are accessible to you
    responses:
      200:
        body:
          type: proxy[]

  post:
    description: Launch a new proxy
    body:
      type: proxySpec
    responses:
      201:
        body:
          type: proxy

  /{proxyId}:
    get:
      description: Get the details of a running proxy
      responses:
        200:
          body:
            type: proxy

    delete:
      description: Stop a running proxy
      responses:
        200:
          body:
            type: string

  /{proxySpecId}:
    post:
      description: Launch a new proxy
      responses:
        201:
          body:
            type: proxy

/proxyspec:
  get:
    description: Get a list of all available proxy specs
    responses:
      200:
        body:
          type: proxySpec[]

  /{proxySpecId}:
    get:
      description: Get the details of a proxy spec
        responses:
        200:
          body:
            type: proxySpec